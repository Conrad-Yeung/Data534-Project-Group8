library(testthat)
library(RAWG.io.Wrapper)
devtools::test("RAWG.io.Wrapper")
devtools::test("testthat")
test_check("RAWG.io.Wrapper")
library(testthat)
library(RAWG.io.Wrapper)
devtools::test("testthat")
library(ggplot2)
library(dplyr)
# library(RAWG.io.Wrapper)
source("../R/game_genre.R")
source("../R/game_list.R")
API_KEY = "95731a37dcf84a638308f6f40fb01801"    # Get you API from RAWG
# Get a list of all genres with some stats
genres <- get_genre_list(API_KEY)
# Overview
str(genres)
# Bar chart of the query result
as.data.frame(genres) %>%
transform(name=as.factor(name), games_count=as.integer(games_count)) %>%
ggplot() + aes(x=reorder(name, -games_count), y=games_count) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("Game Genres") +
ylab("No. of Games") +
labs(title = "Number of Games Available per Genre")
# Get all the games released in the year 2020
query_1 <- get_game_list(api_key=API_KEY,start_date="2020-01-01",end_date="2020-12-31")
str(query_1)
# Get all the games with ratings between 80 and100
query_2 <- get_game_list(api_key=API_KEY, metacritic="80-100")
str(query_2)
# Plotting average metacritic ratings
as.data.frame(query_1) %>%
ggplot() + aes(x=as.integer(metacritic)) +
geom_density() +
xlab("Metacritic Ratings") +
ylab("Density") +
labs(title = "Density Plot of Reviewer's Metacritic Ratings")
Sys.setenv("R_TESTS" = "")
devtools::test("RAWG.io.Wrapper")
devtools::test_check("RAWG.io.Wrapper")
testthat::test_check("RAWG.io.Wrapper")
library(mgcv)
